---
- summary: |
    Успешная регистрация пользователя
  requirement: |
    При верном вводе логине и пароля пользователь должен зарегистрироваться в системе
  prerequisites: |
    Открыта страница регистрации
  test-data: |
    Nickname = ilona Password = 1234word Email = joker_l11@mail.ru # в последующем вводе изменяем: nickname, password, email
  steps:
    - Вводим Nickname
    - Вводим Email
    - Вводим Password
    - Повторный ввод Password
    - Нажимаем кнопку "Регистрация"
  expected-result: |
    Пользователь успешно зарегистрировался

- summary: |
    Успешный вход пользователя с существующими логином и паролем
  requirement: |
    При верном вводе логине и пароля пользователь должен войти в систему
  prerequisites: |
    Открыта страница логина
  test-data: |
    Тестовыеданные
    Nickname = Ilona Password = 1234word
  steps:
    - Вводим логин
    - Вводим пароль
    - Нажимаем кнопку "Войти"
  expected-result: |
    Пользователь стартовую страницу, где в правом углу отображен его ник 

- summary: |
    Успешный вход пользователя через Github
  requirement: |
    При верном вводе логине и пароля пользователь должен войти в систему
  prerequisites: |
    Открыта страница логина
  test-data: |
    Профиль на Github
  steps:
    - Нажимаем кнопку "Войти через Github"
  expected-result: |
    Пользователь стартовую страницу, где в правом углу отображен его ник 

- summary: |
    Успешный вход пользователя через Discord
  requirement: |
    При верном вводе логине и пароля пользователь должен войти в систему
  prerequisites: |
    Открыта страница логина
  test-data: |
    Профиль на Discord
  steps:
    - Нажимаем кнопку "Войти через Discord"
  expected-result: |
    Пользователь стартовую страницу, где в правом углу отображен его ник 

- summary: |
    Успешное переключение между вкладками "Лобби", "Турниры", "Завершенные игры"
  requirement: |
    Пользователь может зайти во вкладки "Лобби", "Турниры", "Завершенные игры"
  prerequisites: |
    Открыта главная страница приложения Codebattle
    Пользователь зарегистрирован 
  test-data: |
    вкладка "Лобби"
    вкладка "Турниры"
    вкладка "Завершенные игры"
  steps:
    - Открыта главная страница приложения Codebattle
    - Нажать на вкладку "Лобби"
    - Визуально просматриваем информацию вкладки "Лобби"
    - Нажать на вкладку "Турниры"
    - Визуально просматриваем информацию вкладки "Турниры"
    - Нажать на вкладку "Завершенные игры"
    - Визуально просматриваем информацию вкладки "Завершенные игры"
  expected-result: |
    Корректно работают вкладки "Лобби", "Турниры", "Завершенные игры"

- summary: |
    Успешное подключение к доступной игре
  requirement: |
    Пользователь может зайти во вкладку "Лобби"и подключится к доступной игре
  prerequisites: |
    Открыта главная страница приложения Codebattle
    Пользователь зарегистрирован 
    Есть доступная игра, к которой можно присоединиться 
  test-data: |
    вкладка "Лобби"
  steps:
    - Открыта главная страница приложения Codebattle
    - Нажать на вкладку "Лобби"
    - Визуально просматриваем информацию вкладки "Лобби"
    - Нажать на кнопку"Сражение"
  expected-result: |
    Пользователь подключился к доступной игре

- summary: |
    Успешный показ турнира
  requirement: |
    Пользователь может зайти во вкладку "Турниры" и посмотреть турнир
    Пользователь зарегистрирован 
  prerequisites: |
    Открыта главная страница приложения Codebattle
  test-data: |
    вкладка "Турниры"
  steps:
    - Открыта главная страница приложения Codebattle
    - Нажать на вкладку "Турниры"
    - Визуально просматриваем информацию вкладки "Турниры"
    - Нажать на кнопку "Показывать"
  expected-result: |
    Пользователь просмотрел турнир между игроками

- summary: |
    Успешный показ завершенных игр
  requirement: |
    Пользователь может зайти во вкладку "Завершенные игры"и посмотреть игру
  prerequisites: |
    Открыта главная страница приложения Codebattle
    Пользователь зарегистрирован 
  test-data: |
    вкладка "Завершенные игры"
  steps:
    - Открыта главная страница приложения Codebattle
    - Нажать на вкладку "Завершенные игры"
    - Визуально просматриваем информацию вкладки "Завершенные игры"
    - Нажать на кнопку "Показывать"
  expected-result: |
    Пользователь просмотрел завершенную игру между игроками

- summary: |
    Успешное отображение рейтинга пользователей
  requirement: |
    Пользователь видит рейтинг пользователей 
  prerequisites: |
    Открыта главная страница приложения Codebattle
    Пользователь зарегистрирован 
  test-data: |
    Codebattle
    вкладка "еженедельный"
    вкладка "ежемесячный"
    вкладка "итог"
  steps:
    - Визуально просматриваем главную страницу Codebattle
    - Находим рейтинг пользователей
    - Нажимаем на "ТОП-лист"
    - Визуально просматриваем страницу с рейтингом пользователей 
    - Нажимаем вкладку "еженедельный"
    - Визуально просматриваем страницу с еженедельным рейтингом пользователей 
    - Нажимаем вкладку "ежемесячный"
    - Визуально просматриваем страницу с ежемесячным рейтингом пользователей 
    - Нажимаем вкладку "итог"
    - Визуально просматриваем страницу с итоговым рейтингом пользователей 
  expected-result: |
    Корректно отображается рейтинг пользователей 

- summary: |
    Успешный поиск пользователя на странице рейтинга пользователя
  requirement: |
    Пользователь может найти другого пользователя через поисковую строку на странице рейтинга пользователей
  prerequisites: |
    Открыта страница рейтинга пользователей
    Пользователь зарегистрирован 
  test-data: |
    Nickname пользователя
  steps:
    - Визуально просматриваем страницу с рейтингом пользователей 
    - В поисковую строку вводим Nickname пользователя
    - Визуально просматриваем страницу поиска 
  expected-result: |
    Пользователь найден и отображен 

- summary: |
    Успешная фильтрация списка пользователей по "рангу", "рейтингу", "сыграно игр", "присоединился к"
  requirement: |
    Пользователь фильтровать рейтинг пользователей по "рангу", "рейтингу", "сыграно игр", "присоединился к"
  prerequisites: |
    Открыта страница рейтинга пользователей
    Пользователь зарегистрирован 
  test-data: |
    фильтр = "ранг"
    фильтр = "рейтинг"
    фильтр = "сыграно игр" 
    фильтр = "присоединился к"
  steps:
    - Визуально просматриваем страницу с рейтингом пользователей 
    - Нажимаем на фильтр "ранг"
    - Визуально просматриваем список пользователей отсортированных по рангу
    - Нажимаем на фильтр "рейтинг"
    - Визуально просматриваем список пользователей отсортированных по рейтингу
    - Нажимаем на фильтр "сыграно игр"
    - Визуально просматриваем список пользователей отсортированных по сыгранным играм
    - Нажимаем на фильтр "присоединился к"
    - Визуально просматриваем список пользователей отсортированных по присоединению
  expected-result: |
    Фильтрация списка пользователей работает корректно 

- summary: |
    Успешное отображение списка пользователей на странице (по количеству)
  requirement: |
    Пользователь может задать количество пользователей отображающихся на странице рейтинга 
  prerequisites: |
    Открыта страница рейтинга пользователей
    Пользователь зарегистрирован 
  test-data: |
    Количество пользователей на странице 20, 30, 40, 50
  steps:
    - Визуально просматриваем страницу с рейтингом пользователей 
    - Нажимаем на фильтр "Количество пользователей"
    - Задаем значение  20
    - Визуально просматриваем список пользователей 
    - Задаем значение  30
    - Визуально просматриваем список пользователей 
    - Задаем значение  40
    - Визуально просматриваем список пользователей 
    - Задаем значение  50
    - Визуально просматриваем список пользователей 
  expected-result: |
    Отображение пользователей по количеству работает корректно

- summary: |
    Успешное отображение списка пользователей "с ботами"
  requirement: |
    Пользователь может просматривать список пользователей включающий ботов
  prerequisites: |
    Открыта страница рейтинга пользователей
    Пользователь зарегистрирован 
  test-data: |
    Фильтр = "с ботами"
  steps:
    - Визуально просматриваем страницу с рейтингом пользователей 
    - Нажимаем на фильтр "с ботами"
  expected-result: |
    Отображение списка пользователей с ботами работает 

- summary: |
    Успешная навигация по страницам рейтинга пользователей
  requirement: |
    Пользователь должен иметь возможность просматривать страницы рейтинга пользователей
  prerequisites: |
    Открыта страница рейтинга пользователей
    Пользователь зарегистрирован 
  test-data: |
    Nickname = Елена111(201)
  steps:
    - Визуально просматриваем страницу с рейтингом пользователей 
    - Ищем пользователя Елена111(201)
    - Нажимаем кнопку "2" в низу страницы 
  expected-result: |
    Навигация по страницам работает

- summary: |
    Успешное отображение игроков в онлайн
  requirement: |
    Пользователь видит количество игроков в онлайн
  prerequisites: |
    Открыта главная страница приложения Codebattle
    Пользователь зарегистрирован 
  test-data: |
    Codebattle
  steps:
    - Визуально просматриваем главную страницу Codebattle
    - Находим поле с количеством игроков онлайн
  expected-result: |
    Корректно отображается список игроков онлайн 

- summary: |
    Успешное отправление личного сообщения
  requirement: |
    Пользователь может отправить личное сообщение другому пользователю 
  prerequisites: |
    Открыта главная страница приложения Codebattle
    Пользователь зарегистрирован 
  test-data: |
    Codebattle
  steps:
    - Визуально просматриваем главную страницу Codebattle
    - Находим поле с количеством игроков онлайн
    - Нажимаем на игрока 
    - В окне выбираем "Личное сообщение"
    - Пользователь присоединился к закрытому каналу
    - Вводим текст "Привет"
    - Сообщение отправлено в чат
    - Сообщение отображено в чате
  expected-result: |
    Отправка сообщений в личный чат работает

- summary: |
    Успешное отправление приглашения
  requirement: |
    Пользователь может отправить приглашение на бой 
  prerequisites: |
    Открыта главная страница приложения Codebattle
    Пользователь зарегистрирован 
  test-data: |
    Codebattle
  steps:
    - Визуально просматриваем главную страницу Codebattle
    - Находим поле с количеством игроков онлайн
    - Нажимаем на игрока 
    - В окне выбираем "Отправить приглашение"
  expected-result: |
    Отправка приглашения на бой работает корректно

- summary: |
    Успешный выход из игры
  requirement: |
    Каждый игрок может выйти из игры 
  prerequisites: |
    Открыта страница игры
    Пользователь зарегистрирован 
  test-data: |
    Codebattle
  steps:
    - Визуально просматриваем страницу игры
    - Нажимаем кнопку "Выход"
    - Визуально просматриваем стартовую страницу
  expected-result: |
    Кнопка выхода из игры работает 

- summary: |
    Корректное отображение двух редакторов 
  requirement: |
    Оба игрока видят два редактора: слева - свой редактор, справа – соперника
  prerequisites: |
    Открыта страница игры
    Пользователь зарегистрирован 
  test-data: |
    Codebattle
  steps:
    - Визуально просматриваем свои редактор
    - Визуально просматриваем редактор соперника
  expected-result: |
    Редактор корректно работает

- summary: |
    Успешное отображение времени игры (таймер)
  requirement: |
    Пользователь видит отображение времени игры (таймер)
  prerequisites: |
    Открыта страница игры
    Пользователь зарегистрирован 
  test-data: |
    Codebattle
  steps:
    - Визуально просматриваем главную страницу Codebattle
    - Нажимаем на кнопку "Создать игру" 
    - В модальном окне выбираем уровень сложности игры
    - Выбираем тип игры с ботом
    - Выставляем контроль времени 8 минут
    - Выбираем тег 
    - Визуально просматриваем страницу игры
    - Находим таймер времени игры
    - Визуально просматриваем корректную работу таймера
    - Время таймера истекло, проиграл звуковой сигнал 
  expected-result: |
    Время (таймер) в игре работает корректно

- summary: |
    Успешное переподключение к игре
  requirement: |
    Пользователь успешно переподключился к игре 
  prerequisites: |
    Открыта страница игры
    Пользователь зарегистрирован 
  test-data: |
    Codebattle
  steps:
    - Нажать на кнопку "Вернуться на главную страницу"
    - Визуально просматриваем стартовую страницу 
    - Нажимаем на кнопку "Продолжить"
  expected-result: |
    Работает переподключение к игре

- summary: |
    Успешное переподключение к игре через вкладку "Лобби"
  requirement: |
    Пользователь успешно переподключился к игре через вкладку 
  prerequisites: |
    Открыта страница игры
    Пользователь зарегистрирован 
  test-data: |
    вкладка = "Лобби"
  steps:
    - Нажать на кнопку "Вернуться на главную страницу"
    - Визуально просматриваем стартовую страницу 
    - Заходим во вкладку "Лобби"
    - Нажимаем на кнопку "Продолжить"
  expected-result: |
    Работает переподключение к игре через вкладку

- summary: |
    Успешная смена фона в редакторе
  requirement: |
    Пользователь успешно сменил фон в редакторе
  prerequisites: |
    Открыта страница игры
    Пользователь зарегистрирован 
  test-data: |
    кнопка = "светлый"
    кнопка = "тёмный"
  steps:
    - Визуально просматриваем редактор игры
    - Нажимаем на кнопку "светлый"
    - Визуально просматриваем редактор игры
    - Нажимаем на кнопку "темны"
  expected-result: |
    Работает смена фона в редакторе

- summary: |
    Успешная смена языка в игре
  requirement: |
    Корректно работает кнопка смены языка
  prerequisites: |
    Открыта страница игры
    Пользователь зарегистрирован 
  test-data: |
    Кнопка = "EN", = "RU"
  steps:
    - Визуально просматриваем вкладку "Задача"
    - Нажимаем на кнопку смены языка "RU"
    - Визуально просматриваем страницу игры
    - Нажимаем на кнопку смены языка "EN"
    - Визуально просматриваем страницу игры
  expected-result: |
    Работает кнопка смены языка 

- summary: |
    Успешная работа чата игры
  requirement: |
    Корректно работает чат игры
  prerequisites: |
    Открыта страница игры
    Пользователь зарегистрирован 
  test-data: |
    Чат игры
  steps:
    - Визуально просматриваем окно чата игры
    - В строку ввода текста вводим сообщение 
    - Нажимаем на кнопку"Отправить"
    - Сообщение отправлено в чат игры
    - Визуально просматриваем окно чата игры на отображение сообщения 
  expected-result: |
    Чат игры работает корректно, сообщение отправлено и отображено в чате

- summary: |
    Успешный просмотр истории
  requirement: |
    Пользователь может просмотреть историю игры
  prerequisites: |
    Открыта стартовая страница 
    Пользователь зарегистрирован 
  test-data: |
    кнопка ="История"
  steps:
    - Визуально просматриваем страницу игры
    - Нажимаем на кнопку "История"
    - Визуально просматриваем запись игры
  expected-result: |
    История игры работает корректно

- summary: |
    Успешная работа Codebattle в браузере MicrosoftEdge
  requirement: |
    Codebattle корректно работает в браузере MicrosoftEdge
  prerequisites: |
    Открыта стартовая страница Codebattle
    Пользователь зарегистрирован
  test-data: |
    браузер MicrosoftEdge Версия 118.0.2088.69 (Официальная сборка) (64-разрядная версия)
  steps:
    - Открыть страницу Codebattle в браузере MicrosoftEdge
    - Визуально осмотреть страницу Codebattle
  expected-result: |
    Codebattle корректно работает в браузере MicrosoftEdge

- summary: |
    Успешная работа Codebattle в браузере Firefox
  requirement: |
    Codebattle корректно работает в браузере Firefox
  prerequisites: |
    Открыта стартовая страница Codebattle
    Пользователь зарегистрирован
  test-data: |
    браузер Firefox Версия 119.0 (64-битная)
  steps:
    - Открыть страницу Codebattle в браузере MicrosoftEdge
    - Визуально осмотреть страницу Codebattle
  expected-result: |
    Codebattle корректно работает в браузере Firefox

- summary: |
    Успешная адаптивность Codebattle на мобильном устройстве 
  requirement: |
   Codebattle корректно работает на мобильном устройстве в различных браузерах 
  prerequisites: |
    Открыта стартовая страница Codebattle
    Пользователь зарегистрирован
  test-data: |
    устройство POCOF3 версия Android 13TKQ1.220829.002
    браузер Chrome версия 118.0.5993.80
  steps:
    - Открыть стартовую страницу Codebattle на мобильном устройстве в браузере Chrome
    - Визуально осматриваем стартовую страницу 
    - Нажимаем на кнопку "Попробовать сыграть"
    - Визуально осматриваем страницу игры
  expected-result: |
    Интернет магазин корректно работает на мобильном устройстве в браузере Chrome

- summary: |
    Успешный мониторинг запросов в браузере Chrome
  requirement: |
    Codebattle корректно работает запросы уходят приходят ответы без ошибок 
  prerequisites: |
    Открыта стартовая страница Codebattle 
    Пользователь зарегистрирован
  test-data: |
    браузер Chrome версия 118.0.5993.80
  steps:
    - Открыть страницу Codebattle в браузере Chrome
    - Правой кнопкой мыши в меню открыть "Просмотреть код"
    - Вкладка "Сеть"
    - Обновить стартовую страницу Codebattle
    - Просмотр запросов на ошибки  
    - Просмотр ответов на ошибки  
  expected-result: |
    Codebattle корректно работает запросы уходят и приходят ответы без ошибок

- summary: |
    Успешный мониторинг запросов в браузере Firefox
  requirement: |
   Codebattle корректно работает запросы уходят приходят ответы без ошибок
  prerequisites: |
    Открыта стартовая страница Codebattle
    Пользователь зарегистрирован
  test-data: |
    браузер Firefox Версия 119.0 (64-битная)
  steps:
    - Открыть страницу Codebattle в браузере Firefox
    - Правой кнопкой мыши в меню открыть "Исследовать"
    - Вкладка "Сеть"
    - Обновить страницу Codebattle 
    - Просмотр запросов на ошибки  
    - Просмотр ответов на ошибки  
  expected-result: |
    Codebattle корректно работает запросы уходят и приходят ответы без ошибок 

- summary: |
    Успешное создание игры с ботом
  requirement: |
    Пользователь может создать игру с ботом
  prerequisites: |
    Открыта главная страница приложения Codebattle
    Пользователь зарегистрирован 
  test-data: |
    Codebattle
    Choose opponent = bot
    Level = по умолчанию
    Time control = по умолчанию 
  steps:
    - Визуально просматриваем главную страницу Codebattle
    - Нажимаем на кнопку "Создать игру" 
    - В модальном окне выбираем уровень сложности игры
    - Выбираем тип игры с ботом
    - Выставляем контроль времени 
    - Выбираем тег 
    - Нажимаем кнопку "Crate battle"
  expected-result: |
    Создание игры с ботом работает корректно 

- summary: |
    Успешное создание игры с другом
  requirement: |
    Пользователь может создать игру с другом
  prerequisites: |
    Открыта главная страница приложения Codebattle
    Пользователь зарегистрирован 
  test-data: |
    Codebattle
    Choose opponent = Fairy Tail
    Level = по умолчанию
    Time control = по умолчанию 
  steps:
    - Нажимаем на кнопку "Создать игру" 
    - В модальном окне выбираем уровень сложности игры
    - Выбираем тип игры с Choose opponent
    - Выбираем Choose opponent = Fairy Tail
    - Выставляем контроль времени 
    - Выбираем тег 
    - Нажимаем кнопку "Crate invite"
  expected-result: |
    Создание игры с другом работает корректно 

- summary: |
    Успешное создание игры с другим пользователем
  requirement: |
    Пользователь может создать игру с другим пользователем 
  prerequisites: |
    Открыта главная страница приложения Codebattle
    Пользователь зарегистрирован 
  test-data: |
    Codebattle
    Level = по умолчанию
    Time control = по умолчанию 
  steps:
    - Нажимаем на кнопку "Создать игру" 
    - В модальном окне выбираем уровень сложности игры
    - Выбираем тип игры With other users
    - Выставляем контроль времени 
    - Выбираем тег 
    - Нажимаем кнопку "Crate battle"
  expected-result: |
    Создание игры с другим пользователем работает корректно 

- summary: |
    Неверное решение 
  requirement: |
    Пользователь может неверно решить задачу игры
  prerequisites: |
    Открыта страница игры
    Пользователь зарегистрирован 
  test-data: |
    Codebattle
    Level = по умолчанию
    Time control = по умолчанию 
    Choose opponent = bot
    Choose task by name or tags = repdigit_number
    Язык = Node.js 
    Вводим код = 
#const _ = require("lodash");
#const R = require("rambda");
#
#const solution = (number) => {
#  const arr = number.toString().split('');
#  const nums = arr.map(Number);
#  console.log(nums);
#  for (let i =0; i < nums.length; i + = 1){
#    if (arr[i] !== arr[i+1]) {
#      return false;
#    }
#  return true;
#  }
#};
#
#module.exports = solution;
  steps:
    - Нажимаем на кнопку "Создать игру" 
    - В модальном окне выбираем уровень сложности игры
    - Выбираем тип игры с ботом
    - Выставляем контроль времени 
    - Выбираем тег repdigit_number
    - Нажимаем кнопку "Crate battle"
    - В редакторе выбираем язык = Node.js
    - Вводим код 
    - Нажимаем на кнопку проверки решения
    - Звуковой сигнал, OUTPUT Test failed
  expected-result: |
    Пользователь, неверно решил задачу игры, проверка кода работает

- summary: |
    Выигрыш в игре
  requirement: |
    Пользователь может выиграть в игре
  prerequisites: |
    Открыта страница игры
    Пользователь зарегистрирован 
  test-data: |
    Codebattle
    Level = по умолчанию
    Time control = по умолчанию 
    Choose opponent = bot
    Choose task by name or tags = repdigit_number
    Язык = Node.js 
    Вводим код = 
#const _ = require("lodash");
#const R = require("rambda");
#
#const solution = (number) => {
#  return String(number).split('').every((a, i, arr) => arr[0] === a);
#};
#
#module.exports = solution;
  steps:
    - Нажимаем на кнопку "Создать игру" 
    - В модальном окне выбираем уровень сложности игры
    - Выбираем тип игры с ботом
    - Выставляем контроль времени 
    - Выбираем тег repdigit_number
    - Нажимаем кнопку "Crate battle"
    - В редакторе выбираем язык = Node.js
    - Вводим код 
    - Проверяем 
    - Всплывает модальное окно с анимацией, надписью "Woohoo, you're Champion!!!!! "
  expected-result: |
    Пользователь выиграл в игре, проверка кода работает 

- summary: |
    Поражение в игре 
  requirement: |
    Пользователь может потерпеть поражение в игре
  prerequisites: |
    Открыта страница игры
    Пользователь зарегистрирован 
  test-data: |
    Codebattle
    Level = по умолчанию
    Time control = по умолчанию 
    Choose opponent = bot
    Choose task by name or tags = repdigit_number
    Язык = Node.js 
    Вводим код = 
#const _ = require("lodash");
#const R = require("rambda");
#
#const solution = (number) => {
#  const arr = number.toString().split('');
#  const nums = arr.map(Number);
#  console.log(nums);
#  for (let i =0; i < nums.length; i + = 1){
#    if (arr[i] !== arr[i+1]) {
#      return false;
#    }
#  return true;
#  }
#};
#
#module.exports = solution;
  steps:
    - Нажимаем на кнопку "Создать игру" 
    - В модальном окне выбираем уровень сложности игры
    - Выбираем тип игры с ботом
    - Выставляем контроль времени 
    - Выбираем тег repdigit_number
    - Нажимаем кнопку "Crate battle"
    - В редакторе выбираем язык = Node.js
    - Вводим код 
    - Нажимаем на кнопку проверки решения
    - Звуковой сигнал, OUTPUT Test failed
    - Редактируем код
    - Нажимаем на кнопку проверки решения
    - Звуковой сигнал, надпись GAME_OVER
  expected-result: |
    Пользователь потерпел поражение в игре

- summary: |
    Сдаемся в игре
  requirement: |
    Пользователь может сдаться в игре
  prerequisites: |
    Открыта страница игры
    Пользователь зарегистрирован 
  test-data: |
    Codebattle
    Level = по умолчанию
    Time control = по умолчанию 
    Choose opponent = bot
    Choose task by name or tags = по умолчанию
  steps:
    - Нажимаем на кнопку "Создать игру" 
    - В модальном окне выбираем уровень сложности игры
    - Выбираем тип игры с ботом
    - Выставляем контроль времени 
    - Выбираем тег 
    - Нажимаем кнопку "Crate battle"
    - В редакторе нажимаем кнопку "Give up"
    - Модальное окно с вопросом "Are you sure you want to give up? "
    - В модальном окне нажимаем кнопку "Give up"
    - Модальное окно с анимацией, надписью"If you read this you've lost the game"
  expected-result: |
    Пользователь сдался в игре

- summary: |
    Успешная игра без регистрации
  requirement: |
    Пользователь может сыграть в игру без регистрации 
  prerequisites: |
    Открыта главная страница приложения Codebattle
  test-data: |
    Codebattle
  steps:
    - Визуально просматриваем главную страницу Codebattle
    - Нажимаем на кнопку "Попробовать сыграть"
    - Отображение страницы игры
  expected-result: |
    Игра работает без регистрации пользователя 

- summary: |
    Успешная работа кнопки "Сброса редактора "
  requirement: |
    Пользователь сдался в игре 
  prerequisites: |
    Открыта страница игры
    Пользователь зарегистрирован 
  test-data: |
    Codebattle
    Level = по умолчанию
    Time control = по умолчанию 
    Choose opponent = bot
    Choose task by name or tags = по умолчанию
  steps:
    - Нажимаем на кнопку "Создать игру" 
    - В модальном окне выбираем уровень сложности игры
    - Выбираем тип игры с ботом
    - Выставляем контроль времени 
    - Выбираем тег 
    - Нажимаем кнопку "Crate battle"
    - В редакторе нажимаем кнопку "Сброса реактора"
  expected-result: |
    Кнопка "Сброса редактора" работает 
